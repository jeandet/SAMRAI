geom_sources_C = ['GridGeometry.C',
	'CartesianPatchGeometry.C',
	'CartesianGridGeometry.C',
	'CartesianCellDoubleLinearRefine.C',
	'CartesianCellDoubleConservativeLinearRefine.C',
	'CartesianCellDoubleWeightedAverage.C',
	'CartesianOutersideDoubleWeightedAverage.C',
	'CartesianSideDoubleWeightedAverage.C',
	'CartesianSideDoubleConservativeLinearRefine.C',
	'CartesianEdgeDoubleWeightedAverage.C',
	'CartesianEdgeDoubleConservativeLinearRefine.C',
	'CartesianNodeDoubleLinearRefine.C',
	'CartesianOuterfaceDoubleWeightedAverage.C',
	'CartesianFaceDoubleWeightedAverage.C',
	'CartesianFaceDoubleConservativeLinearRefine.C',
	'CartesianCellFloatLinearRefine.C',
	'CartesianCellFloatWeightedAverage.C',
	'CartesianCellFloatConservativeLinearRefine.C',
	'CartesianSideFloatConservativeLinearRefine.C',
	'CartesianSideFloatWeightedAverage.C',
	'CartesianEdgeFloatConservativeLinearRefine.C',
	'CartesianEdgeFloatWeightedAverage.C',
	'CartesianNodeFloatLinearRefine.C',
	'CartesianOuterfaceFloatWeightedAverage.C',
	'CartesianFaceFloatWeightedAverage.C',
	'CartesianFaceFloatConservativeLinearRefine.C',
	'CartesianCellComplexLinearRefine.C',
	'CartesianCellComplexWeightedAverage.C',
	'CartesianCellComplexConservativeLinearRefine.C',
	'CartesianSideComplexWeightedAverage.C',
	'CartesianEdgeComplexWeightedAverage.C',
	'CartesianNodeComplexLinearRefine.C',
	'CartesianOuterfaceComplexWeightedAverage.C',
	'CartesianFaceComplexWeightedAverage.C']


geom_headers = ['CartesianCellComplexConservativeLinearRefine.h',
 'CartesianCellComplexLinearRefine.h',
 'CartesianCellComplexWeightedAverage.h',
 'CartesianCellDoubleConservativeLinearRefine.h',
 'CartesianCellDoubleLinearRefine.h',
 'CartesianCellDoubleWeightedAverage.h',
 'CartesianCellFloatConservativeLinearRefine.h',
 'CartesianCellFloatLinearRefine.h',
 'CartesianCellFloatWeightedAverage.h',
 'CartesianEdgeComplexWeightedAverage.h',
 'CartesianEdgeDoubleConservativeLinearRefine.h',
 'CartesianEdgeDoubleWeightedAverage.h',
 'CartesianEdgeFloatConservativeLinearRefine.h',
 'CartesianEdgeFloatWeightedAverage.h',
 'CartesianFaceComplexWeightedAverage.h',
 'CartesianFaceDoubleConservativeLinearRefine.h',
 'CartesianFaceDoubleWeightedAverage.h',
 'CartesianFaceFloatConservativeLinearRefine.h',
 'CartesianFaceFloatWeightedAverage.h',
 'CartesianGridGeometry.h',
 'CartesianNodeComplexLinearRefine.h',
 'CartesianNodeDoubleLinearRefine.h',
 'CartesianNodeFloatLinearRefine.h',
 'CartesianOuterfaceComplexWeightedAverage.h',
 'CartesianOuterfaceDoubleWeightedAverage.h',
 'CartesianOuterfaceFloatWeightedAverage.h',
 'CartesianOutersideDoubleWeightedAverage.h',
 'CartesianPatchGeometry.h',
 'CartesianSideComplexWeightedAverage.h',
 'CartesianSideDoubleConservativeLinearRefine.h',
 'CartesianSideDoubleWeightedAverage.h',
 'CartesianSideFloatConservativeLinearRefine.h',
 'CartesianSideFloatWeightedAverage.h',
 'GridGeometry.h']

geom_fortran_sources = m4_generator.process(
['fortran/geom_cartcoarsen1d.m4',
 'fortran/geom_cartcoarsen2d.m4',
 'fortran/geom_cartcoarsen3d.m4',
 'fortran/geom_cartcoarsen4d.m4',
 'fortran/geom_cartrefine1d.m4',
 'fortran/geom_cartrefine2d.m4',
 'fortran/geom_cartrefine3d.m4']
)

geom_sources = C_to_cpp_gen.process(geom_sources_C)

geom = library('SAMRAI_geom', sources:[geom_fortran_sources, geom_sources],
	include_directories:SAMRAI_inc,
	dependencies: [SAMRAI_tbox_dep, SAMRAI_hier_dep, SAMRAI_pdat_dep, SAMRAI_glob_dep]
	)

SAMRAI_geom_dep = declare_dependency(link_with:geom,
	dependencies: [SAMRAI_tbox_dep, SAMRAI_hier_dep, SAMRAI_pdat_dep, SAMRAI_glob_dep])
